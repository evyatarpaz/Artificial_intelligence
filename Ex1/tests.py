import time
from ex1_check import solve_problems 

# Define the problems with their names
problems = {
    "problem1": ((1, 1), (1,)),
    "problem2": ((1, 2, 2, 1, 1), (2, 1)),
    "problem3": ((1, 2, 3, 3, 2, 2, 1, 1), (3,)),
    "problem4": ((2, 2, 3, 2), (3, 3)),
    "problem5": ((2, 2, 3, 2), (3, 3, 2, 1, 2, 2, 4)),
    "problem6": ((2, 2, 3, 3, 2), (1, 3)),
    "problem7": ((3, 3, 4, 4, 3, 3), (3, 4)),
    "problem8": ((1, 1, 2, 2, 1, 1, 3, 3, 4, 4, 3, 1, 1), (2, 4, 3, 3, 3, 1)),
    "problem9": ((2, 3, 3, 2), (1, 2, 3)),
    "problem10": ((4, 1, 2, 3, 3, 2, 2, 1, 1), (4, 3, 4)),
    "problem11": ((1, 1, 3, 3, 2, 2, 3, 3, 2, 2, 3, 3, 2, 4, 1, 1, 4, 3, 3, 2, 2, 3, 3, 1, 1), (3, 4, 1, 2, 3, 4)),
    "problem12": ((2, 2, 3, 3, 1), (1, 1, 2, 3)),
    "problem13": ((4, 2, 2, 3, 3, 2), (1, 3, 4, 4)),
    "problem14": ((1, 1, 2, 2, 3, 3, 4, 4, 3, 3, 2, 2, 1, 1), (1, 2, 3, 4)),
    "problem15": ((1, 1, 2, 2, 3, 3, 4, 4, 3, 3, 2, 2, 1, 1), (1, 2, 3, 4, 1, 2, 3, 4)),
    "problem16": ((1, 1, 2, 2, 3, 3, 4, 4, 3, 3, 2, 2, 1, 1, 2, 2), (1, 2, 3, 4, 1, 2)),
    "problem17": ((1, 1, 3, 3, 2, 2, 3, 3, 4, 4, 3, 3, 2, 2, 3, 3, 1, 1), (1, 2, 3, 4, 1, 2, 3, 4)),
    "problem18": ((2, 2, 3, 3, 1), (4, 1, 1, 2, 3)),
    "problem18_1": ((1, 2, 2, 1, 1, 3, 3, 1), (4, 2, 3, 4, 4, 2, 1)),
    "problem19": ((1, 2, 2, 1, 1, 3, 3, 1), (4, 2, 3, 4, 4, 3, 2, 3, 2, 2, 3, 1, 1)),
    "problem20": ((1, 1, 2, 4, 1, 1, 4, 3, 3, 2, 2, 3, 3, 1, 1), (3, 4, 1, 2, 3, 4)),
    "problem21": ((1, 1, 3, 3, 4, 4, 3, 3, 2, 2, 1, 1, 2, 2), (1, 2, 3, 4, 2, 3, 4)),
    "problem22": ((1, 1, 3, 3, 4, 4, 3, 3, 2, 2, 1, 1, 2, 2), (1, 2, 3, 4, 1, 3)),
    "problem22_1": ((1, 1, 3, 3, 2, 2, 3, 1, 2, 3, 3, 2, 2, 3, 3, 1, 1), (3, 1, 2, 4, 3, 4, 3, 1)),
    "problem22_2": ((1, 1, 3, 3, 2, 2, 3, 1, 4, 2, 3, 3, 2, 2, 3, 3, 1, 1), (3, 4, 1, 2, 4, 3, 4, 3, 1)),
    "problem23": ((3, 3, 4, 4, 3, 3), (3, 1, 2, 3, 2, 1, 4)),
    "problem24": ((1, 3, 3, 2, 1, 2, 2), (1, 3, 2, 4, 2, 3, 2)),
    "problem25": ((3, 3, 1, 4, 2, 4, 4, 1, 2, 4, 3), (2, 2, 2, 2, 4, 4, 1, 3)),
    "problem25_1": ((1, 1, 2, 2, 1, 1, 3, 3, 4, 4, 3, 1, 1), (3, 3, 3, 3, 3, 2, 4, 3, 3, 3, 1)),
    "problem25_2": ((3, 3, 1, 1, 4, 3, 2, 4, 3, 3, 2, 4, 4, 1, 3), (4, 4, 2, 2, 3, 3, 3, 1, 3)),
    "problem26": ((1, 3, 3, 2, 1, 2, 2), (1, 3, 2, 4, 2, 3, 4, 2)),
    "problem27": ((1, 2, 1, 2), (1, 2, 4, 1, 2, 2, 4, 1, 3, 2, 1, 2)),
    "problem28": ((2, 2, 3, 2), (3, 1)),
    "problem29": ((4, 2, 2, 3, 3, 2), (1, 3)),
    "problem30": ((2, 2, 3, 3, 2, 4), (2, 2, 3, 2)),
    "problem31": ((4, 2, 2, 3, 3, 2), (1, 3, 4)),
    "problem32": ((4, 2, 2, 3, 3, 1), (1, 1, 2, 3)),
}

# Define the algorithms
algorithms = ["astar","gbfs"]

def main():
    program_start = time.time()
    for problem_name, problem_data in problems.items():
        for algorithm in algorithms:
            print(f"{problem_name}, Algorithm: {algorithm}")
            start_time = time.time()
            solve_problems(problem_data, algorithm)
            end_time = time.time()
            print(f"Time: {end_time - start_time:.2f} seconds")
            print("")
    program_end = time.time()
    print(f"Total time for all problems: {program_end - program_start:.2f} seconds")

if __name__ == '__main__':
    main()
